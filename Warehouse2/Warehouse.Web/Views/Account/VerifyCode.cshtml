@model Warehouse.Web.Models.VerifyCodeViewModel
@{
    ViewBag.Title = "Verify";
    ViewBag.PageClass = "login";
}
<h2>@ViewBag.Title.</h2>

@if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
{
    <div class="note note-danger note-bordered">
        <button class="close" data-close="alert"></button>
        <span class="errors">
            <strong>Ooops...</strong>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </span>
    </div>
}
@using (Html.BeginForm("VerifyCode", "Account", new { ReturnUrl = Model.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
    @Html.AntiForgeryToken()
    @Html.Hidden("provider", @Model.Provider)
    @Html.Hidden("rememberMe", @Model.RememberMe)
    <h4>Enter verification code</h4>
    <div class="form-group">
        @Html.LabelFor(m => m.Code, new { @class = "control-label visible-ie8 visible-ie9" })
        @Html.TextBoxFor(m => m.Code, new { @class = "form-control placeholder-no-fix", placeholder = "Verification Code" })
    </div>
    <div class="form-group">
        <div class="checkbox">
            @Html.CheckBoxFor(m => m.RememberBrowser)
            @Html.LabelFor(m => m.RememberBrowser)
        </div>
    </div>
    <div class="form-group margin-top-20 margin-bottom-20">
        <div class="form-actions">
            <button type="submit" class="btn btn-success uppercase pull-right"><i class="fa fa-lock"></i> Submit</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
