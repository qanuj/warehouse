@model Warehouse.Web.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    ViewBag.PageClass = "login";
}

@if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
{
    <div class="note note-danger note-bordered">
        <button class="close" data-close="alert"></button>
        <span class="errors">
            <strong>Ooops...</strong>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </span>
    </div>
}
@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h2>Reset your password.</h2>
    @Html.HiddenFor(model => model.Code)
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "control-label visible-ie8 visible-ie9" })
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", Placeholder = "Email" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "control-label visible-ie8 visible-ie9" })
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", Placeholder = "New Password" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label visible-ie8 visible-ie9" })
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", Placeholder = "Confirm Password" })
    </div>
    <div class="form-actions">
        <input type="submit" class="btn btn-success uppercase pull-right" value="Reset" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
