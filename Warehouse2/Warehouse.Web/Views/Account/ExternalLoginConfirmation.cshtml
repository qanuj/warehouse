@model Warehouse.Web.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
    ViewBag.PageClass = "login";
}
@if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
{
    <div class="note note-danger note-bordered">
        <button class="close" data-close="alert"></button>
        <span class="errors">
            <strong>Ooops...</strong>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </span>
    </div>
}
@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h2>@ViewBag.Title.</h2>
    <h3>Associate your @ViewBag.LoginProvider account.</h3>
    <p class="text-info">
        You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
        Please enter a user name for this site below and click the Register button to finish
        logging in.
    </p>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new {@class = "control-label visible-ie8 visible-ie9"})
        @Html.TextBoxFor(m => m.Email, new {@class = "form-control placeholder-no-fix", Placeholder = "Email"})
        @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
    </div>
    <div class="form-group margin-top-20 margin-bottom-20">
        <div class="form-actions">
            <button type="submit" class="btn btn-success uppercase pull-right"><i class="fa fa-pencil"></i> Register</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
